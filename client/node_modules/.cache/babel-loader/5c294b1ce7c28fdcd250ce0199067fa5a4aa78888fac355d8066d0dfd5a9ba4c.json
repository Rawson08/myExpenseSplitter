{"ast":null,"code":"const express = require('express');\nconst multer = require('multer');\nconst tesseract = require('node-tesseract-ocr');\nconst app = express();\nconst upload = multer({\n  dest: 'uploads/'\n});\napp.post('/api/upload', upload.single('receipt'), async (req, res) => {\n  try {\n    const ocrResult = await tesseract.recognize(req.file.path);\n    // Parse the OCR result and structure it\n    const structuredData = parseReceiptData(ocrResult);\n    res.json(structuredData);\n  } catch (error) {\n    res.status(500).send('Error processing the receipt');\n  }\n});\nfunction parseReceiptData(text) {\n  // Implement your parsing logic here\n}\napp.listen(3001, () => {\n  console.log('Server running on port 3001');\n});","map":{"version":3,"names":["express","require","multer","tesseract","app","upload","dest","post","single","req","res","ocrResult","recognize","file","path","structuredData","parseReceiptData","json","error","status","send","text","listen","console","log"],"sources":["/home/roshan/Personal Projects/my-expense-manager/src/parseReceiptData.js"],"sourcesContent":["const express = require('express');\nconst multer = require('multer');\nconst tesseract = require('node-tesseract-ocr');\n\nconst app = express();\nconst upload = multer({ dest: 'uploads/' });\n\napp.post('/api/upload', upload.single('receipt'), async (req, res) => {\n  try {\n    const ocrResult = await tesseract.recognize(req.file.path);\n    // Parse the OCR result and structure it\n    const structuredData = parseReceiptData(ocrResult);\n    res.json(structuredData);\n  } catch (error) {\n    res.status(500).send('Error processing the receipt');\n  }\n});\n\nfunction parseReceiptData(text) {\n  // Implement your parsing logic here\n}\n\napp.listen(3001, () => {\n  console.log('Server running on port 3001');\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAME,SAAS,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAE/C,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,MAAM,GAAGH,MAAM,CAAC;EAAEI,IAAI,EAAE;AAAW,CAAC,CAAC;AAE3CF,GAAG,CAACG,IAAI,CAAC,aAAa,EAAEF,MAAM,CAACG,MAAM,CAAC,SAAS,CAAC,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACpE,IAAI;IACF,MAAMC,SAAS,GAAG,MAAMR,SAAS,CAACS,SAAS,CAACH,GAAG,CAACI,IAAI,CAACC,IAAI,CAAC;IAC1D;IACA,MAAMC,cAAc,GAAGC,gBAAgB,CAACL,SAAS,CAAC;IAClDD,GAAG,CAACO,IAAI,CAACF,cAAc,CAAC;EAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdR,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,8BAA8B,CAAC;EACtD;AACF,CAAC,CAAC;AAEF,SAASJ,gBAAgBA,CAACK,IAAI,EAAE;EAC9B;AAAA;AAGFjB,GAAG,CAACkB,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;AAC5C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}