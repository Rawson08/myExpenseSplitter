{"ast":null,"code":"var _jsxFileName = \"/home/roshan/Personal Projects/my-expense-manager/src/ReceiptUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReceiptUpload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewSrc, setPreviewSrc] = useState('');\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setPreviewSrc(URL.createObjectURL(file)); // Create a URL for the file\n    }\n  };\n  const handleSubmit = async () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('receipt', selectedFile);\n    try {\n      const response = await fetch('http://localhost:3001/api/uploads', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('OCR Result:', data.text);\n      } else {\n        console.error('Error in file upload');\n      }\n    } catch (error) {\n      console.error('Error uploading the file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"image/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), previewSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewSrc,\n      alt: \"Preview\",\n      style: {\n        maxWidth: '300px',\n        maxHeight: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Upload Receipt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(ReceiptUpload, \"fp16JfWwGYjuMidyYlX+q/n8dmU=\");\n_c = ReceiptUpload;\nexport default ReceiptUpload;\nvar _c;\n$RefreshReg$(_c, \"ReceiptUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReceiptUpload","_s","selectedFile","setSelectedFile","previewSrc","setPreviewSrc","handleFileChange","event","file","target","files","URL","createObjectURL","handleSubmit","formData","FormData","append","response","fetch","method","body","ok","data","json","console","log","text","error","children","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","maxHeight","onClick","_c","$RefreshReg$"],"sources":["/home/roshan/Personal Projects/my-expense-manager/src/ReceiptUpload.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ReceiptUpload() {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [previewSrc, setPreviewSrc] = useState('');\n\n    const handleFileChange = event => {\n        const file = event.target.files[0];\n        if (file) {\n            setSelectedFile(file);\n            setPreviewSrc(URL.createObjectURL(file)); // Create a URL for the file\n        }\n    };\n\n    const handleSubmit = async () => {\n        if (!selectedFile) return;\n\n        const formData = new FormData();\n        formData.append('receipt', selectedFile);\n\n        try {\n            const response = await fetch('http://localhost:3001/api/uploads', {\n                method: 'POST',\n                body: formData\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                console.log('OCR Result:', data.text);\n            } else {\n                console.error('Error in file upload');\n            }\n        } catch (error) {\n            console.error('Error uploading the file:', error);\n        }\n    };\n\n    return (\n        <div>\n            <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" />\n            {previewSrc && <img src={previewSrc} alt=\"Preview\" style={{ maxWidth: '300px', maxHeight: '300px' }} />}\n            <button onClick={handleSubmit}>Upload Receipt</button>\n        </div>\n    );\n}\n\nexport default ReceiptUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,gBAAgB,GAAGC,KAAK,IAAI;IAC9B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACNL,eAAe,CAACK,IAAI,CAAC;MACrBH,aAAa,CAACM,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACX,YAAY,EAAE;IAEnB,MAAMY,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEd,YAAY,CAAC;IAExC,IAAI;MACA,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,IAAI,CAACI,IAAI,CAAC;MACzC,CAAC,MAAM;QACHF,OAAO,CAACG,KAAK,CAAC,sBAAsB,CAAC;MACzC;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ,CAAC;EAED,oBACI5B,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAExB,gBAAiB;MAACyB,MAAM,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjE/B,UAAU,iBAAIL,OAAA;MAAKqC,GAAG,EAAEhC,UAAW;MAACiC,GAAG,EAAC,SAAS;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAQ;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvGpC,OAAA;MAAQ0C,OAAO,EAAE5B,YAAa;MAAAe,QAAA,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEd;AAAClC,EAAA,CA1CQD,aAAa;AAAA0C,EAAA,GAAb1C,aAAa;AA4CtB,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}