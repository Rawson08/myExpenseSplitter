{"ast":null,"code":"var _jsxFileName = \"/home/roshan/Personal Projects/my-expense-manager/src/ReceiptUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReceiptUpload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    // TODO: Additional file handling logic for future\n  };\n  const handleSubmit = async () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('receipt', selectedFile);\n    try {\n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json(); // Get the response data\n\n      if (response.ok) {\n        console.log('OCR Result:', data.text); // Process/display this data in your UI\n      } else {\n        console.error('Error in file upload');\n      }\n      // TODO: Handle response here\n    } catch (error) {\n      console.error('Error uploading the file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Upload Receipt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ReceiptUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = ReceiptUpload;\nexport default ReceiptUpload;\nvar _c;\n$RefreshReg$(_c, \"ReceiptUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReceiptUpload","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleSubmit","formData","FormData","append","response","fetch","method","body","data","json","ok","console","log","text","error","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/roshan/Personal Projects/my-expense-manager/src/ReceiptUpload.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ReceiptUpload() {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    // TODO: Additional file handling logic for future\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedFile) return;\n\n    const formData = new FormData();\n    formData.append('receipt', selectedFile);\n\n    try {\n      const response = await fetch('/api/upload', { \n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json(); // Get the response data\n\nif (response.ok) {\n  console.log('OCR Result:', data.text); // Process/display this data in your UI\n} else {\n  console.error('Error in file upload');\n}\n      // TODO: Handle response here\n    } catch (error) {\n      console.error('Error uploading the file:', error);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleSubmit}>Upload Receipt</button>\n    </div>\n  );\n}\n\nexport default ReceiptUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,gBAAgB,GAAGC,KAAK,IAAI;IAChCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACN,YAAY,EAAE;IAEnB,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAET,YAAY,CAAC;IAExC,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QAC1CC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;;MAE1C,IAAIL,QAAQ,CAACM,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,IAAI,CAACK,IAAI,CAAC,CAAC,CAAC;MACzC,CAAC,MAAM;QACLF,OAAO,CAACG,KAAK,CAAC,sBAAsB,CAAC;MACvC;MACM;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAErB;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD9B,OAAA;MAAQ+B,OAAO,EAAEtB,YAAa;MAAAe,QAAA,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAAC5B,EAAA,CAtCQD,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAwCtB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}